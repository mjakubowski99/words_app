version: "3.7"

services:

    prometheus:
        image: prom/prometheus
        container_name: "${PROJECT_NAME}_prometheus"
        volumes:
            - "./config/devops/prometheus.yml:/etc/prometheus/prometheus.yml"
            - ./config/devops/alert-rules.yml:/etc/prometheus/alert-rules.yml
        ports:
            - "9091:9090"
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - monitoring-network

    node_exporter:
        image: quay.io/prometheus/node-exporter:latest
        container_name: "${PROJECT_NAME}_node_exporter"
        command:
            - '--path.rootfs=/host'
        restart: unless-stopped
        volumes:
            - '/:/host:ro,rslave'
        ports:
            - 9100:9100
        networks:
            - monitoring-network

    php-fpm-exporter:
        image: hipages/php-fpm_exporter:latest
        container_name: "${PROJECT_NAME}_php_fpm_exporter"
        ports:
            - "9253:9253"
        environment:
            - PHP_FPM_SCRAPE_URI=tcp://host.docker.internal:9000/status
            - PHP_FPM_FIX_PROCESS_COUNT=true
        extra_hosts:
            - "host.docker.internal:host-gateway"
        networks:
            - monitoring-network

    loki:
        image: grafana/loki:2.9.2
        container_name: "${PROJECT_NAME}_loki"
        ports:
            - "3100:3100"
        volumes:
            - ./config/devops/loki-local-config.yml:/etc/loki/local-config.yaml
        command: -config.file=/etc/loki/local-config.yaml
        networks:
           - monitoring-network
# 
    promtail:
        image: grafana/promtail:2.9.2
        container_name: "${PROJECT_NAME}_promtail"
        volumes:
            - ./config/devops/promtail.yml:/etc/promtail/config.yml
            - /var/log:/var/log:ro
            - "${PROJECT_REAL_PATH}/entry/storage/logs/:/var/laravel/storage:ro"
            - /var/lib/docker/containers:/var/docker/containers:ro
        command: -config.file=/etc/promtail/config.yml
        networks:
            - monitoring-network

    grafana:
        environment:
            - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
            - GF_AUTH_ANONYMOUS_ENABLED=true
            - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
        entrypoint:
            - sh
            - -euc
            - |
                mkdir -p /etc/grafana/provisioning/datasources
                cat <<EOF > /etc/grafana/provisioning/datasources/ds.yaml
                apiVersion: 1
                datasources:
                - name: Loki
                  type: loki
                  access: proxy
                  orgId: 1
                  url: http://loki:3100
                  basicAuth: false
                  isDefault: true
                  version: 1
                  editable: false
                EOF
                /run.sh
        image: grafana/grafana:latest
        container_name: "${PROJECT_NAME}_grafana"
        restart: unless-stopped
        ports:
            - "3000:3000"
        volumes:
            - grafana_storage:/var/lib/grafana
        networks:
            - monitoring-network

    alertmanager:
        image: prom/alertmanager:latest
        container_name: words_alertmanager
        volumes:
            - ./config/devops/alertmanager.yml:/etc/alertmanager/alertmanager.yml
        ports:
            - "9093:9093"
        command:
            - --config.file=/etc/alertmanager/alertmanager.yml
        networks:
            - monitoring-network

    cadvisor:
        image: gcr.io/cadvisor/cadvisor:v0.47.2
        container_name: "${PROJECT_NAME}_cadvisor"
        privileged: true
        devices:
            - /dev/kmsg:/dev/kmsg
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk/:/dev/disk:ro
        ports:
            - "8080:8080"
        networks:
            - monitoring-network
volumes:
    grafana_storage:
        name: ${PROJECT_NAME}_grafana_storage

networks:
    monitoring-network:
        driver: bridge
