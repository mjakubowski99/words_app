version: "3.7"

services:
  php:
    build:
      context: ../../
      args:
        USER: "${USER}"
        UID: "${UID}"
        GID: "${GID}"
      dockerfile: entry/docker/config/php/production.Dockerfile
    container_name: "${PROJECT_NAME}_prod_php"
    image: words_prod_php
    restart: unless-stopped
    working_dir: /var/www/entry
    env_file:
      - .env.prod
    volumes:
      - ../storage:/var/www/entry/storage
      - ../.env:/var/www/entry/.env
    extra_hosts:
      - "host.docker.internal:host-gateway"
    ports:
      - "9000:9000"
    links:
      - db
    networks:
      - prod-network

  nginx:
    image: nginx:latest
    container_name: "${PROJECT_NAME}_prod_nginx"
    restart: unless-stopped
    ports:
      - "82:80"
      - "443:443"
    env_file:
      - .env.prod
    volumes:
      - ../public:/var/www/entry/public/
      - ../storage/app/public:/var/www/entry/public/storage
      #- ./etc/ssl/certs/private/local-docker.pem:/etc/ssl/certs/private/local-docker.pem
      #- ./etc/ssl/certs/local-docker.pem:/etc/ssl/certs/local-docker.pem
      #- /etc/ssl/certs/self_dhparam.pem:/etc/ssl/certs/dhparam.pem
      - ./config/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./logs/nginx:/var/log/nginx
    links:
      - php
      - db
    networks:
      - prod-network

  db:
    image: postgres:15.3-alpine
    container_name: "${PROJECT_NAME}_prod_db"
    restart: unless-stopped
    ports:
      - "${DATABASE_PORT}:5432"
    volumes:
      - prod_db_volume:/data/postgres
    env_file:
      - .env.prod
    environment:
      POSTGRES_DATABASE: "${PROJECT_NAME}_prod_db"
      PGDATA: /data/postgres
    networks:
      - prod-network

volumes:
  prod_db_volume:
    name: ${PROJECT_NAME}_prod_db_volume

networks:
  prod-network:
